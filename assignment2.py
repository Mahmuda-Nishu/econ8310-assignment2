# -*- coding: utf-8 -*-
"""assignment2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/10amAjeH1rmyShztPSzH2feEc1J8e_sKk
"""

# assignment2.py

import pandas as pd
from sklearn.ensemble import RandomForestClassifier
from sklearn.preprocessing import LabelEncoder

# Load training and test data
train_url = "https://github.com/dustywhite7/Econ8310/raw/master/AssignmentData/assignment3.csv"
test_url = "https://github.com/dustywhite7/Econ8310/raw/master/AssignmentData/assignment3test.csv"

df_train = pd.read_csv(train_url)
df_test = pd.read_csv(test_url)

# Drop irrelevant columns
df_train = df_train.drop(['id', 'DateTime'], axis=1)
df_test = df_test.drop(['id', 'DateTime'], axis=1)

# Handle categorical variables
categorical_cols = df_train.select_dtypes(include='object').columns
encoders = {}
for col in categorical_cols:
    le = LabelEncoder()
    df_train[col] = le.fit_transform(df_train[col].astype(str))
    df_test[col] = df_test[col].astype(str).apply(lambda x: le.transform([x])[0] if x in le.classes_ else -1)
    encoders[col] = le

# Split into features and target
X_train = df_train.drop('meal', axis=1)
y_train = df_train['meal']
X_test = df_test[X_train.columns]  # Ensure exact same structure

# Define model
model = RandomForestClassifier(random_state=42)
model.fit(X_train, y_train)

# Assign fitted model to modelFit (critical for autograder)
modelFit = model

# Predict
pred = [int(x) for x in modelFit.predict(X_test)]

# Print preview
print("First 10 predictions:", pred[:10])