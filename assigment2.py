# -*- coding: utf-8 -*-
"""assigment2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/10amAjeH1rmyShztPSzH2feEc1J8e_sKk
"""

# assignment2.py

import pandas as pd
from sklearn.ensemble import RandomForestClassifier
from sklearn.preprocessing import LabelEncoder

# Load data
train_url = "https://raw.githubusercontent.com/dustywhite7/Econ8310/master/AssignmentData/assignment3.csv"
test_url = "https://github.com/dustywhite7/Econ8310/raw/master/AssignmentData/assignment3test.csv"

train_data = pd.read_csv(train_url)
test_data = pd.read_csv(test_url)

# Drop rows with missing target
train_data = train_data.dropna(subset=["meal"])

# Fill missing values
train_data = train_data.fillna(0)
test_data = test_data.fillna(0)

# Encode categorical variables (fit on train, transform test)
categorical_cols = train_data.select_dtypes(include="object").columns
label_encoders = {}

for col in categorical_cols:
    le = LabelEncoder()
    train_data[col] = le.fit_transform(train_data[col].astype(str))
    test_data[col] = test_data[col].astype(str).apply(lambda x: le.transform([x])[0] if x in le.classes_ else -1)
    label_encoders[col] = le

# Define input and output
X_train = train_data.drop(columns=["meal"])
y_train = train_data["meal"]
X_test = test_data.drop(columns=["meal"], errors='ignore')

# ✅ Required variable: model
model = RandomForestClassifier(random_state=42)

# ✅ Required variable: modelFit
modelFit = model.fit(X_train, y_train)

# ✅ Required variable: pred
pred = modelFit.predict(X_test)
pred = [int(p) for p in pred]  # convert to list of 0s and 1s

# Optional: Save predictions
pd.Series(pred).to_csv("assignment2_predictions.csv", index=False)

# Optional: Print preview
print("First 10 predictions:", pred[:10])